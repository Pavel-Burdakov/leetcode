class Solution {
    public boolean isPalindrome(int x) {
        int reverse = 0; //это переменная, которая будет хранить перевернутое число.
        int tmp = x; //это временная переменная, в которую мы копируем значение x, чтобы не изменять оригинальное значение x.
        while (tmp > 0){
            reverse = reverse * 10 + tmp % 10; // берет последнюю цифру числа tmp, добавляет эту цифру в конец переменной reverse. Умножение на 10 сдвигает все цифры в reverse на одну позицию влево, а добавление последней цифры из tmp добавляет её в конец.
            tmp /= 10; // tmp /= 10; удаляет последнюю цифру из tmp, сдвигая его на одну позицию вправо.          
        }        
        return reverse == x;        
    }
}

/** 
▎Пример работы метода:
Рассмотрим пример, когда x = 121.
• Начальное значение: reverse = 0, tmp = 121
• Первый проход цикла:
  • Последняя цифра: 121 % 10 = 1
  • Обновление: reverse = 0 * 10 + 1 = 1
  • Удаление последней цифры: tmp = 121 / 10 = 12  
• Второй проход цикла:
  • Последняя цифра: 12 % 10 = 2
  • Обновление: reverse = 1 * 10 + 2 = 12
  • Удаление последней цифры: tmp = 12 / 10 = 1
• Третий проход цикла:
  • Последняя цифра: 1 % 10 = 1
  • Обновление: reverse = 12 * 10 + 1 = 121
  • Удаление последней цифры: tmp = 1 / 10 = 0
Теперь цикл завершен (tmp равно 0), и мы сравниваем:
• reverse (121) == x (121) → возвращаем true.
*/